// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddNewArticle should match snapshot 1`] = `
<AddNewArticle>
  <div
    id="addNewArticle"
  >
    <Component
      handleClick={[Function]}
      paths={
        Array [
          Object {
            "id": "homeLink",
            "label": "Home",
            "path": "/home",
          },
          Object {
            "id": "addNewArticle",
            "label": "Add new article",
            "path": "/addNewArticle",
          },
        ]
      }
    >
      <div
        id="RRUCBreadCrumbs"
      >
        <div
          className="breadcrumbs"
        >
          <f
            id="homeLink"
            label="Home"
            onClick={[Function]}
            variant="link"
          >
            <div
              id="RRUCButton"
            >
              <span
                className="btn-link"
                onClick={[Function]}
              >
                Home
              </span>
            </div>
          </f>
          <span
            className="bradcrumbs-divider"
          >
            /
          </span>
          <div
            className="greyLink"
          >
            Add new article
          </div>
        </div>
      </div>
    </Component>
    <ForwardRef
      description="en:addnewarticle-description"
      header="en:addnewarticle-header"
    >
      <Component
        description="en:addnewarticle-description"
        forwardedRef={null}
        header="en:addnewarticle-header"
      >
        <InnerLoadable
          description="en:addnewarticle-description"
          forwardedRef={null}
          header="en:addnewarticle-header"
        />
      </Component>
    </ForwardRef>
    <Component
      formList={
        Array [
          Object {
            "cols": Array [
              Object {
                "colcss": "page-form-col",
                "id": "title",
                "label": "Title",
                "name": "title",
                "type": "TextField",
                "variant": "outlined",
              },
            ],
            "sizes": Object {
              "lg": 12,
              "md": 12,
              "sm": 12,
              "xs": 12,
            },
          },
          Object {
            "cols": Array [
              Object {
                "colcss": "page-form-col",
                "id": "description",
                "label": "Description",
                "multiline": true,
                "name": "description",
                "rows": 5,
                "type": "TextField",
                "variant": "outlined",
              },
            ],
            "sizes": Object {
              "lg": 12,
              "md": 12,
              "sm": 12,
              "xs": 12,
            },
          },
          Object {
            "cols": Array [
              Object {
                "colcss": "page-form-col",
                "name": "upload",
                "type": "Upload",
              },
            ],
            "sizes": Object {
              "lg": 12,
              "md": 12,
              "sm": 12,
              "xs": 12,
            },
          },
        ]
      }
      handleFormSubmit={[Function]}
      initialValues={
        Object {
          "description": "",
          "imgBase64": "",
          "title": "",
        }
      }
      name="addNewStaff"
      schema={
        ObjectSchema {
          "_blacklist": ReferenceSet {
            "list": Set {},
            "refs": Map {},
          },
          "_blacklistError": undefined,
          "_excludedEdges": Array [],
          "_nodes": Array [
            "title",
          ],
          "_sortErrors": [Function],
          "_typeError": [Function],
          "_whitelist": ReferenceSet {
            "list": Set {},
            "refs": Map {},
          },
          "_whitelistError": undefined,
          "conditions": Array [],
          "deps": Array [],
          "exclusiveTests": Object {},
          "fields": Object {
            "title": StringSchema {
              "_blacklist": ReferenceSet {
                "list": Set {},
                "refs": Map {},
              },
              "_blacklistError": undefined,
              "_mutate": undefined,
              "_typeError": [Function],
              "_whitelist": ReferenceSet {
                "list": Set {},
                "refs": Map {},
              },
              "_whitelistError": undefined,
              "conditions": Array [],
              "deps": Array [],
              "exclusiveTests": Object {
                "max": true,
                "min": true,
                "required": true,
              },
              "spec": Object {
                "abortEarly": true,
                "nullable": false,
                "presence": "required",
                "recursive": true,
                "strict": false,
                "strip": false,
              },
              "tests": Array [
                [Function],
                [Function],
                [Function],
              ],
              "transforms": Array [
                [Function],
              ],
              "type": "string",
            },
          },
          "spec": Object {
            "abortEarly": true,
            "nullable": false,
            "presence": "optional",
            "recursive": true,
            "strict": false,
            "strip": false,
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
          "type": "object",
        }
      }
      submitBtnText="en:submit"
    >
      <div
        id="RRUCForm"
      >
        <Formik
          initialValues={
            Object {
              "description": "",
              "imgBase64": "",
              "title": "",
            }
          }
          onSubmit={[Function]}
          validationSchema={
            ObjectSchema {
              "_blacklist": ReferenceSet {
                "list": Set {},
                "refs": Map {},
              },
              "_blacklistError": undefined,
              "_excludedEdges": Array [],
              "_nodes": Array [
                "title",
              ],
              "_sortErrors": [Function],
              "_typeError": [Function],
              "_whitelist": ReferenceSet {
                "list": Set {},
                "refs": Map {},
              },
              "_whitelistError": undefined,
              "conditions": Array [],
              "deps": Array [],
              "exclusiveTests": Object {},
              "fields": Object {
                "title": StringSchema {
                  "_blacklist": ReferenceSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_blacklistError": undefined,
                  "_mutate": undefined,
                  "_typeError": [Function],
                  "_whitelist": ReferenceSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_whitelistError": undefined,
                  "conditions": Array [],
                  "deps": Array [],
                  "exclusiveTests": Object {
                    "max": true,
                    "min": true,
                    "required": true,
                  },
                  "spec": Object {
                    "abortEarly": true,
                    "nullable": false,
                    "presence": "required",
                    "recursive": true,
                    "strict": false,
                    "strip": false,
                  },
                  "tests": Array [
                    [Function],
                    [Function],
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                  "type": "string",
                },
              },
              "spec": Object {
                "abortEarly": true,
                "nullable": false,
                "presence": "optional",
                "recursive": true,
                "strict": false,
                "strip": false,
              },
              "tests": Array [],
              "transforms": Array [
                [Function],
              ],
              "type": "object",
            }
          }
        >
          <div
            className="page-form"
          >
            <Form
              onSubmit={[Function]}
            >
              <form
                action="#"
                onReset={[Function]}
                onSubmit={[Function]}
              >
                <k
                  containerCss="form-row"
                  itemCss="form-col-wrapper"
                  items={
                    Array [
                      <div
                        className="page-form-col"
                      >
                        <b
                          colcss="page-form-col"
                          helperText=""
                          id="title"
                          label="Title"
                          name="title"
                          onChange={[Function]}
                          type="TextField"
                          value=""
                          variant="outlined"
                        />
                      </div>,
                    ]
                  }
                  key="form-addNewStaff-0"
                  name="addNewStaff"
                  sizes={
                    Object {
                      "lg": 12,
                      "md": 12,
                      "sm": 12,
                      "xs": 12,
                    }
                  }
                  spacing={2}
                >
                  <WithStyles(ForwardRef(Grid))
                    className="form-row"
                    container={true}
                    id="RRUCGridContainer"
                    spacing={2}
                  >
                    <ForwardRef(Grid)
                      className="form-row"
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-xs-center": "MuiGrid-justify-xs-center",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                          "root": "MuiGrid-root",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      container={true}
                      id="RRUCGridContainer"
                      spacing={2}
                    >
                      <div
                        className="MuiGrid-root form-row MuiGrid-container MuiGrid-spacing-xs-2"
                        id="RRUCGridContainer"
                      >
                        <x
                          item={
                            <div
                              className="page-form-col"
                            >
                              <b
                                colcss="page-form-col"
                                helperText=""
                                id="title"
                                label="Title"
                                name="title"
                                onChange={[Function]}
                                type="TextField"
                                value=""
                                variant="outlined"
                              />
                            </div>
                          }
                          itemCss="form-col-wrapper"
                          key="addNewStaff-grid-0"
                          sizes={
                            Object {
                              "lg": 12,
                              "md": 12,
                              "sm": 12,
                              "xs": 12,
                            }
                          }
                        >
                          <WithStyles(ForwardRef(Grid))
                            className="form-col-wrapper"
                            id="RRUCGridItem"
                            item={true}
                            lg={12}
                            md={12}
                            sm={12}
                            xs={12}
                          >
                            <ForwardRef(Grid)
                              className="form-col-wrapper"
                              classes={
                                Object {
                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                  "container": "MuiGrid-container",
                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                  "grid-md-1": "MuiGrid-grid-md-1",
                                  "grid-md-10": "MuiGrid-grid-md-10",
                                  "grid-md-11": "MuiGrid-grid-md-11",
                                  "grid-md-12": "MuiGrid-grid-md-12",
                                  "grid-md-2": "MuiGrid-grid-md-2",
                                  "grid-md-3": "MuiGrid-grid-md-3",
                                  "grid-md-4": "MuiGrid-grid-md-4",
                                  "grid-md-5": "MuiGrid-grid-md-5",
                                  "grid-md-6": "MuiGrid-grid-md-6",
                                  "grid-md-7": "MuiGrid-grid-md-7",
                                  "grid-md-8": "MuiGrid-grid-md-8",
                                  "grid-md-9": "MuiGrid-grid-md-9",
                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                  "grid-md-true": "MuiGrid-grid-md-true",
                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                  "item": "MuiGrid-item",
                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                  "root": "MuiGrid-root",
                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                }
                              }
                              id="RRUCGridItem"
                              item={true}
                              lg={12}
                              md={12}
                              sm={12}
                              xs={12}
                            >
                              <div
                                className="MuiGrid-root form-col-wrapper MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12 MuiGrid-grid-lg-12"
                                id="RRUCGridItem"
                              >
                                <div
                                  className="page-form-col"
                                >
                                  <b
                                    colcss="page-form-col"
                                    helperText=""
                                    id="title"
                                    label="Title"
                                    name="title"
                                    onChange={[Function]}
                                    type="TextField"
                                    value=""
                                    variant="outlined"
                                  >
                                    <div
                                      id="RRUCTextField"
                                    >
                                      <WithStyles(ForwardRef(TextField))
                                        colcss="page-form-col"
                                        helperText=""
                                        id="title"
                                        label="Title"
                                        name="title"
                                        onChange={[Function]}
                                        type="TextField"
                                        value=""
                                        variant="outlined"
                                      >
                                        <ForwardRef(TextField)
                                          classes={
                                            Object {
                                              "root": "MuiTextField-root",
                                            }
                                          }
                                          colcss="page-form-col"
                                          helperText=""
                                          id="title"
                                          label="Title"
                                          name="title"
                                          onChange={[Function]}
                                          type="TextField"
                                          value=""
                                          variant="outlined"
                                        >
                                          <WithStyles(ForwardRef(FormControl))
                                            className="MuiTextField-root"
                                            colcss="page-form-col"
                                            color="primary"
                                            disabled={false}
                                            error={false}
                                            fullWidth={false}
                                            required={false}
                                            variant="outlined"
                                          >
                                            <ForwardRef(FormControl)
                                              className="MuiTextField-root"
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              colcss="page-form-col"
                                              color="primary"
                                              disabled={false}
                                              error={false}
                                              fullWidth={false}
                                              required={false}
                                              variant="outlined"
                                            >
                                              <div
                                                className="MuiFormControl-root MuiTextField-root"
                                                colcss="page-form-col"
                                              >
                                                <WithStyles(ForwardRef(InputLabel))
                                                  htmlFor="title"
                                                  id="title-label"
                                                >
                                                  <ForwardRef(InputLabel)
                                                    classes={
                                                      Object {
                                                        "animated": "MuiInputLabel-animated",
                                                        "asterisk": "MuiInputLabel-asterisk",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "filled": "MuiInputLabel-filled",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInputLabel-formControl",
                                                        "marginDense": "MuiInputLabel-marginDense",
                                                        "outlined": "MuiInputLabel-outlined",
                                                        "required": "Mui-required",
                                                        "root": "MuiInputLabel-root",
                                                        "shrink": "MuiInputLabel-shrink",
                                                      }
                                                    }
                                                    htmlFor="title"
                                                    id="title-label"
                                                  >
                                                    <WithStyles(ForwardRef(FormLabel))
                                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                      classes={
                                                        Object {
                                                          "asterisk": "MuiInputLabel-asterisk",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "required": "Mui-required",
                                                        }
                                                      }
                                                      data-shrink={false}
                                                      htmlFor="title"
                                                      id="title-label"
                                                    >
                                                      <ForwardRef(FormLabel)
                                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                        classes={
                                                          Object {
                                                            "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                            "colorSecondary": "MuiFormLabel-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "filled": "MuiFormLabel-filled",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "required": "Mui-required Mui-required",
                                                            "root": "MuiFormLabel-root",
                                                          }
                                                        }
                                                        data-shrink={false}
                                                        htmlFor="title"
                                                        id="title-label"
                                                      >
                                                        <label
                                                          className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                          data-shrink={false}
                                                          htmlFor="title"
                                                          id="title-label"
                                                        >
                                                          Title
                                                        </label>
                                                      </ForwardRef(FormLabel)>
                                                    </WithStyles(ForwardRef(FormLabel))>
                                                  </ForwardRef(InputLabel)>
                                                </WithStyles(ForwardRef(InputLabel))>
                                                <WithStyles(ForwardRef(OutlinedInput))
                                                  autoFocus={false}
                                                  fullWidth={false}
                                                  id="title"
                                                  label={
                                                    <React.Fragment>
                                                      Title
                                                    </React.Fragment>
                                                  }
                                                  multiline={false}
                                                  name="title"
                                                  onChange={[Function]}
                                                  type="TextField"
                                                  value=""
                                                >
                                                  <ForwardRef(OutlinedInput)
                                                    autoFocus={false}
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                        "adornedStart": "MuiOutlinedInput-adornedStart",
                                                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "input": "MuiOutlinedInput-input",
                                                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                        "marginDense": "MuiOutlinedInput-marginDense",
                                                        "multiline": "MuiOutlinedInput-multiline",
                                                        "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                        "root": "MuiOutlinedInput-root",
                                                      }
                                                    }
                                                    fullWidth={false}
                                                    id="title"
                                                    label={
                                                      <React.Fragment>
                                                        Title
                                                      </React.Fragment>
                                                    }
                                                    multiline={false}
                                                    name="title"
                                                    onChange={[Function]}
                                                    type="TextField"
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      autoFocus={false}
                                                      classes={
                                                        Object {
                                                          "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                          "adornedStart": "MuiOutlinedInput-adornedStart",
                                                          "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "input": "MuiOutlinedInput-input",
                                                          "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                          "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                          "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                          "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                          "marginDense": "MuiOutlinedInput-marginDense",
                                                          "multiline": "MuiOutlinedInput-multiline",
                                                          "notchedOutline": null,
                                                          "root": "MuiOutlinedInput-root",
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      id="title"
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="title"
                                                      onChange={[Function]}
                                                      renderSuffix={[Function]}
                                                      type="TextField"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        autoFocus={false}
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth",
                                                            "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                            "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        id="title"
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="title"
                                                        onChange={[Function]}
                                                        renderSuffix={[Function]}
                                                        type="TextField"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                                                          onClick={[Function]}
                                                        >
                                                          <input
                                                            aria-invalid={false}
                                                            autoFocus={false}
                                                            className="MuiInputBase-input MuiOutlinedInput-input"
                                                            disabled={false}
                                                            id="title"
                                                            name="title"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            required={false}
                                                            type="TextField"
                                                            value=""
                                                          />
                                                          <WithStyles(ForwardRef(NotchedOutline))
                                                            className="MuiOutlinedInput-notchedOutline"
                                                            label={
                                                              <React.Fragment>
                                                                Title
                                                              </React.Fragment>
                                                            }
                                                            labelWidth={0}
                                                            notched={false}
                                                          >
                                                            <ForwardRef(NotchedOutline)
                                                              className="MuiOutlinedInput-notchedOutline"
                                                              classes={
                                                                Object {
                                                                  "legend": "PrivateNotchedOutline-legend-2",
                                                                  "legendLabelled": "PrivateNotchedOutline-legendLabelled-3",
                                                                  "legendNotched": "PrivateNotchedOutline-legendNotched-4",
                                                                  "root": "PrivateNotchedOutline-root-1",
                                                                }
                                                              }
                                                              label={
                                                                <React.Fragment>
                                                                  Title
                                                                </React.Fragment>
                                                              }
                                                              labelWidth={0}
                                                              notched={false}
                                                            >
                                                              <fieldset
                                                                aria-hidden={true}
                                                                className="PrivateNotchedOutline-root-1 MuiOutlinedInput-notchedOutline"
                                                              >
                                                                <legend
                                                                  className="PrivateNotchedOutline-legendLabelled-3"
                                                                >
                                                                  <span>
                                                                    Title
                                                                  </span>
                                                                </legend>
                                                              </fieldset>
                                                            </ForwardRef(NotchedOutline)>
                                                          </WithStyles(ForwardRef(NotchedOutline))>
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(OutlinedInput)>
                                                </WithStyles(ForwardRef(OutlinedInput))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                        </ForwardRef(TextField)>
                                      </WithStyles(ForwardRef(TextField))>
                                    </div>
                                  </b>
                                </div>
                              </div>
                            </ForwardRef(Grid)>
                          </WithStyles(ForwardRef(Grid))>
                        </x>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                </k>
                <k
                  containerCss="form-row"
                  itemCss="form-col-wrapper"
                  items={
                    Array [
                      <div
                        className="page-form-col"
                      >
                        <b
                          colcss="page-form-col"
                          helperText=""
                          id="description"
                          label="Description"
                          multiline={true}
                          name="description"
                          onChange={[Function]}
                          rows={5}
                          type="TextField"
                          value=""
                          variant="outlined"
                        />
                      </div>,
                    ]
                  }
                  key="form-addNewStaff-1"
                  name="addNewStaff"
                  sizes={
                    Object {
                      "lg": 12,
                      "md": 12,
                      "sm": 12,
                      "xs": 12,
                    }
                  }
                  spacing={2}
                >
                  <WithStyles(ForwardRef(Grid))
                    className="form-row"
                    container={true}
                    id="RRUCGridContainer"
                    spacing={2}
                  >
                    <ForwardRef(Grid)
                      className="form-row"
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-xs-center": "MuiGrid-justify-xs-center",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                          "root": "MuiGrid-root",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      container={true}
                      id="RRUCGridContainer"
                      spacing={2}
                    >
                      <div
                        className="MuiGrid-root form-row MuiGrid-container MuiGrid-spacing-xs-2"
                        id="RRUCGridContainer"
                      >
                        <x
                          item={
                            <div
                              className="page-form-col"
                            >
                              <b
                                colcss="page-form-col"
                                helperText=""
                                id="description"
                                label="Description"
                                multiline={true}
                                name="description"
                                onChange={[Function]}
                                rows={5}
                                type="TextField"
                                value=""
                                variant="outlined"
                              />
                            </div>
                          }
                          itemCss="form-col-wrapper"
                          key="addNewStaff-grid-0"
                          sizes={
                            Object {
                              "lg": 12,
                              "md": 12,
                              "sm": 12,
                              "xs": 12,
                            }
                          }
                        >
                          <WithStyles(ForwardRef(Grid))
                            className="form-col-wrapper"
                            id="RRUCGridItem"
                            item={true}
                            lg={12}
                            md={12}
                            sm={12}
                            xs={12}
                          >
                            <ForwardRef(Grid)
                              className="form-col-wrapper"
                              classes={
                                Object {
                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                  "container": "MuiGrid-container",
                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                  "grid-md-1": "MuiGrid-grid-md-1",
                                  "grid-md-10": "MuiGrid-grid-md-10",
                                  "grid-md-11": "MuiGrid-grid-md-11",
                                  "grid-md-12": "MuiGrid-grid-md-12",
                                  "grid-md-2": "MuiGrid-grid-md-2",
                                  "grid-md-3": "MuiGrid-grid-md-3",
                                  "grid-md-4": "MuiGrid-grid-md-4",
                                  "grid-md-5": "MuiGrid-grid-md-5",
                                  "grid-md-6": "MuiGrid-grid-md-6",
                                  "grid-md-7": "MuiGrid-grid-md-7",
                                  "grid-md-8": "MuiGrid-grid-md-8",
                                  "grid-md-9": "MuiGrid-grid-md-9",
                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                  "grid-md-true": "MuiGrid-grid-md-true",
                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                  "item": "MuiGrid-item",
                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                  "root": "MuiGrid-root",
                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                }
                              }
                              id="RRUCGridItem"
                              item={true}
                              lg={12}
                              md={12}
                              sm={12}
                              xs={12}
                            >
                              <div
                                className="MuiGrid-root form-col-wrapper MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12 MuiGrid-grid-lg-12"
                                id="RRUCGridItem"
                              >
                                <div
                                  className="page-form-col"
                                >
                                  <b
                                    colcss="page-form-col"
                                    helperText=""
                                    id="description"
                                    label="Description"
                                    multiline={true}
                                    name="description"
                                    onChange={[Function]}
                                    rows={5}
                                    type="TextField"
                                    value=""
                                    variant="outlined"
                                  >
                                    <div
                                      id="RRUCTextField"
                                    >
                                      <WithStyles(ForwardRef(TextField))
                                        colcss="page-form-col"
                                        helperText=""
                                        id="description"
                                        label="Description"
                                        multiline={true}
                                        name="description"
                                        onChange={[Function]}
                                        rows={5}
                                        type="TextField"
                                        value=""
                                        variant="outlined"
                                      >
                                        <ForwardRef(TextField)
                                          classes={
                                            Object {
                                              "root": "MuiTextField-root",
                                            }
                                          }
                                          colcss="page-form-col"
                                          helperText=""
                                          id="description"
                                          label="Description"
                                          multiline={true}
                                          name="description"
                                          onChange={[Function]}
                                          rows={5}
                                          type="TextField"
                                          value=""
                                          variant="outlined"
                                        >
                                          <WithStyles(ForwardRef(FormControl))
                                            className="MuiTextField-root"
                                            colcss="page-form-col"
                                            color="primary"
                                            disabled={false}
                                            error={false}
                                            fullWidth={false}
                                            required={false}
                                            variant="outlined"
                                          >
                                            <ForwardRef(FormControl)
                                              className="MuiTextField-root"
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              colcss="page-form-col"
                                              color="primary"
                                              disabled={false}
                                              error={false}
                                              fullWidth={false}
                                              required={false}
                                              variant="outlined"
                                            >
                                              <div
                                                className="MuiFormControl-root MuiTextField-root"
                                                colcss="page-form-col"
                                              >
                                                <WithStyles(ForwardRef(InputLabel))
                                                  htmlFor="description"
                                                  id="description-label"
                                                >
                                                  <ForwardRef(InputLabel)
                                                    classes={
                                                      Object {
                                                        "animated": "MuiInputLabel-animated",
                                                        "asterisk": "MuiInputLabel-asterisk",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "filled": "MuiInputLabel-filled",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInputLabel-formControl",
                                                        "marginDense": "MuiInputLabel-marginDense",
                                                        "outlined": "MuiInputLabel-outlined",
                                                        "required": "Mui-required",
                                                        "root": "MuiInputLabel-root",
                                                        "shrink": "MuiInputLabel-shrink",
                                                      }
                                                    }
                                                    htmlFor="description"
                                                    id="description-label"
                                                  >
                                                    <WithStyles(ForwardRef(FormLabel))
                                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                      classes={
                                                        Object {
                                                          "asterisk": "MuiInputLabel-asterisk",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "required": "Mui-required",
                                                        }
                                                      }
                                                      data-shrink={false}
                                                      htmlFor="description"
                                                      id="description-label"
                                                    >
                                                      <ForwardRef(FormLabel)
                                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                        classes={
                                                          Object {
                                                            "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                            "colorSecondary": "MuiFormLabel-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "filled": "MuiFormLabel-filled",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "required": "Mui-required Mui-required",
                                                            "root": "MuiFormLabel-root",
                                                          }
                                                        }
                                                        data-shrink={false}
                                                        htmlFor="description"
                                                        id="description-label"
                                                      >
                                                        <label
                                                          className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                          data-shrink={false}
                                                          htmlFor="description"
                                                          id="description-label"
                                                        >
                                                          Description
                                                        </label>
                                                      </ForwardRef(FormLabel)>
                                                    </WithStyles(ForwardRef(FormLabel))>
                                                  </ForwardRef(InputLabel)>
                                                </WithStyles(ForwardRef(InputLabel))>
                                                <WithStyles(ForwardRef(OutlinedInput))
                                                  autoFocus={false}
                                                  fullWidth={false}
                                                  id="description"
                                                  label={
                                                    <React.Fragment>
                                                      Description
                                                    </React.Fragment>
                                                  }
                                                  multiline={true}
                                                  name="description"
                                                  onChange={[Function]}
                                                  rows={5}
                                                  type="TextField"
                                                  value=""
                                                >
                                                  <ForwardRef(OutlinedInput)
                                                    autoFocus={false}
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                        "adornedStart": "MuiOutlinedInput-adornedStart",
                                                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "input": "MuiOutlinedInput-input",
                                                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                        "marginDense": "MuiOutlinedInput-marginDense",
                                                        "multiline": "MuiOutlinedInput-multiline",
                                                        "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                        "root": "MuiOutlinedInput-root",
                                                      }
                                                    }
                                                    fullWidth={false}
                                                    id="description"
                                                    label={
                                                      <React.Fragment>
                                                        Description
                                                      </React.Fragment>
                                                    }
                                                    multiline={true}
                                                    name="description"
                                                    onChange={[Function]}
                                                    rows={5}
                                                    type="TextField"
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      autoFocus={false}
                                                      classes={
                                                        Object {
                                                          "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                          "adornedStart": "MuiOutlinedInput-adornedStart",
                                                          "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "input": "MuiOutlinedInput-input",
                                                          "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                          "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                          "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                          "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                          "marginDense": "MuiOutlinedInput-marginDense",
                                                          "multiline": "MuiOutlinedInput-multiline",
                                                          "notchedOutline": null,
                                                          "root": "MuiOutlinedInput-root",
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      id="description"
                                                      inputComponent="input"
                                                      multiline={true}
                                                      name="description"
                                                      onChange={[Function]}
                                                      renderSuffix={[Function]}
                                                      rows={5}
                                                      type="TextField"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        autoFocus={false}
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth",
                                                            "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                            "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        id="description"
                                                        inputComponent="input"
                                                        multiline={true}
                                                        name="description"
                                                        onChange={[Function]}
                                                        renderSuffix={[Function]}
                                                        rows={5}
                                                        type="TextField"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-multiline MuiOutlinedInput-multiline"
                                                          onClick={[Function]}
                                                        >
                                                          <textarea
                                                            aria-invalid={false}
                                                            autoFocus={false}
                                                            className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline"
                                                            disabled={false}
                                                            id="description"
                                                            name="description"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            required={false}
                                                            rows={5}
                                                            value=""
                                                          />
                                                          <WithStyles(ForwardRef(NotchedOutline))
                                                            className="MuiOutlinedInput-notchedOutline"
                                                            label={
                                                              <React.Fragment>
                                                                Description
                                                              </React.Fragment>
                                                            }
                                                            labelWidth={0}
                                                            notched={false}
                                                          >
                                                            <ForwardRef(NotchedOutline)
                                                              className="MuiOutlinedInput-notchedOutline"
                                                              classes={
                                                                Object {
                                                                  "legend": "PrivateNotchedOutline-legend-2",
                                                                  "legendLabelled": "PrivateNotchedOutline-legendLabelled-3",
                                                                  "legendNotched": "PrivateNotchedOutline-legendNotched-4",
                                                                  "root": "PrivateNotchedOutline-root-1",
                                                                }
                                                              }
                                                              label={
                                                                <React.Fragment>
                                                                  Description
                                                                </React.Fragment>
                                                              }
                                                              labelWidth={0}
                                                              notched={false}
                                                            >
                                                              <fieldset
                                                                aria-hidden={true}
                                                                className="PrivateNotchedOutline-root-1 MuiOutlinedInput-notchedOutline"
                                                              >
                                                                <legend
                                                                  className="PrivateNotchedOutline-legendLabelled-3"
                                                                >
                                                                  <span>
                                                                    Description
                                                                  </span>
                                                                </legend>
                                                              </fieldset>
                                                            </ForwardRef(NotchedOutline)>
                                                          </WithStyles(ForwardRef(NotchedOutline))>
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(OutlinedInput)>
                                                </WithStyles(ForwardRef(OutlinedInput))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                        </ForwardRef(TextField)>
                                      </WithStyles(ForwardRef(TextField))>
                                    </div>
                                  </b>
                                </div>
                              </div>
                            </ForwardRef(Grid)>
                          </WithStyles(ForwardRef(Grid))>
                        </x>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                </k>
                <k
                  containerCss="form-row"
                  itemCss="form-col-wrapper"
                  items={
                    Array [
                      <N
                        handleClick={[Function]}
                      />,
                    ]
                  }
                  key="form-addNewStaff-2"
                  name="addNewStaff"
                  sizes={
                    Object {
                      "lg": 12,
                      "md": 12,
                      "sm": 12,
                      "xs": 12,
                    }
                  }
                  spacing={2}
                >
                  <WithStyles(ForwardRef(Grid))
                    className="form-row"
                    container={true}
                    id="RRUCGridContainer"
                    spacing={2}
                  >
                    <ForwardRef(Grid)
                      className="form-row"
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-xs-center": "MuiGrid-justify-xs-center",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                          "root": "MuiGrid-root",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      container={true}
                      id="RRUCGridContainer"
                      spacing={2}
                    >
                      <div
                        className="MuiGrid-root form-row MuiGrid-container MuiGrid-spacing-xs-2"
                        id="RRUCGridContainer"
                      >
                        <x
                          item={
                            <N
                              handleClick={[Function]}
                            />
                          }
                          itemCss="form-col-wrapper"
                          key="addNewStaff-grid-0"
                          sizes={
                            Object {
                              "lg": 12,
                              "md": 12,
                              "sm": 12,
                              "xs": 12,
                            }
                          }
                        >
                          <WithStyles(ForwardRef(Grid))
                            className="form-col-wrapper"
                            id="RRUCGridItem"
                            item={true}
                            lg={12}
                            md={12}
                            sm={12}
                            xs={12}
                          >
                            <ForwardRef(Grid)
                              className="form-col-wrapper"
                              classes={
                                Object {
                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                  "container": "MuiGrid-container",
                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                  "grid-md-1": "MuiGrid-grid-md-1",
                                  "grid-md-10": "MuiGrid-grid-md-10",
                                  "grid-md-11": "MuiGrid-grid-md-11",
                                  "grid-md-12": "MuiGrid-grid-md-12",
                                  "grid-md-2": "MuiGrid-grid-md-2",
                                  "grid-md-3": "MuiGrid-grid-md-3",
                                  "grid-md-4": "MuiGrid-grid-md-4",
                                  "grid-md-5": "MuiGrid-grid-md-5",
                                  "grid-md-6": "MuiGrid-grid-md-6",
                                  "grid-md-7": "MuiGrid-grid-md-7",
                                  "grid-md-8": "MuiGrid-grid-md-8",
                                  "grid-md-9": "MuiGrid-grid-md-9",
                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                  "grid-md-true": "MuiGrid-grid-md-true",
                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                  "item": "MuiGrid-item",
                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                  "root": "MuiGrid-root",
                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                }
                              }
                              id="RRUCGridItem"
                              item={true}
                              lg={12}
                              md={12}
                              sm={12}
                              xs={12}
                            >
                              <div
                                className="MuiGrid-root form-col-wrapper MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12 MuiGrid-grid-lg-12"
                                id="RRUCGridItem"
                              >
                                <N
                                  handleClick={[Function]}
                                >
                                  <div
                                    id="RRUCUpload"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="uploadIcon"
                                    >
                                      <ForwardRef(CloudUploadIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(CloudUploadIcon)>
                                    </div>
                                    <g
                                      size={1}
                                      text="Upload a file"
                                    >
                                      <div
                                        id="RRUCTextBody"
                                      >
                                        <div
                                          className="textbody textbody-one"
                                        >
                                          Upload a file
                                        </div>
                                      </div>
                                    </g>
                                    <h
                                      text="File should be less than 10mb"
                                      type="caption"
                                    >
                                      <div
                                        id="RRUCText"
                                      >
                                        <div
                                          className="text caption"
                                        >
                                          File should be less than 10mb
                                        </div>
                                      </div>
                                    </h>
                                  </div>
                                </N>
                              </div>
                            </ForwardRef(Grid)>
                          </WithStyles(ForwardRef(Grid))>
                        </x>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                </k>
                <div
                  className="page-form-actions"
                >
                  <f
                    dense={40}
                    id="submitBtn"
                    label="en:submit"
                    type="submit"
                    variant="filled"
                  >
                    <div
                      id="RRUCButton"
                    >
                      <WithStyles(ForwardRef(Button))
                        className="btn btn-filled height-40"
                        id="submitBtn"
                        type="submit"
                      >
                        <ForwardRef(Button)
                          className="btn btn-filled height-40"
                          classes={
                            Object {
                              "colorInherit": "MuiButton-colorInherit",
                              "contained": "MuiButton-contained",
                              "containedPrimary": "MuiButton-containedPrimary",
                              "containedSecondary": "MuiButton-containedSecondary",
                              "containedSizeLarge": "MuiButton-containedSizeLarge",
                              "containedSizeSmall": "MuiButton-containedSizeSmall",
                              "disableElevation": "MuiButton-disableElevation",
                              "disabled": "Mui-disabled",
                              "endIcon": "MuiButton-endIcon",
                              "focusVisible": "Mui-focusVisible",
                              "fullWidth": "MuiButton-fullWidth",
                              "iconSizeLarge": "MuiButton-iconSizeLarge",
                              "iconSizeMedium": "MuiButton-iconSizeMedium",
                              "iconSizeSmall": "MuiButton-iconSizeSmall",
                              "label": "MuiButton-label",
                              "outlined": "MuiButton-outlined",
                              "outlinedPrimary": "MuiButton-outlinedPrimary",
                              "outlinedSecondary": "MuiButton-outlinedSecondary",
                              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                              "root": "MuiButton-root",
                              "sizeLarge": "MuiButton-sizeLarge",
                              "sizeSmall": "MuiButton-sizeSmall",
                              "startIcon": "MuiButton-startIcon",
                              "text": "MuiButton-text",
                              "textPrimary": "MuiButton-textPrimary",
                              "textSecondary": "MuiButton-textSecondary",
                              "textSizeLarge": "MuiButton-textSizeLarge",
                              "textSizeSmall": "MuiButton-textSizeSmall",
                            }
                          }
                          id="submitBtn"
                          type="submit"
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            className="MuiButton-root MuiButton-text btn btn-filled height-40"
                            component="button"
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            id="submitBtn"
                            type="submit"
                          >
                            <ForwardRef(ButtonBase)
                              className="MuiButton-root MuiButton-text btn btn-filled height-40"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                              id="submitBtn"
                              type="submit"
                            >
                              <button
                                className="MuiButtonBase-root MuiButton-root MuiButton-text btn btn-filled height-40"
                                disabled={false}
                                id="submitBtn"
                                onBlur={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={0}
                                type="submit"
                              >
                                <span
                                  className="MuiButton-label"
                                >
                                  en:submit
                                </span>
                                <WithStyles(memo)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </button>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(Button)>
                      </WithStyles(ForwardRef(Button))>
                    </div>
                  </f>
                </div>
              </form>
            </Form>
          </div>
        </Formik>
      </div>
    </Component>
  </div>
  <Component
    messasge="en:addnewarticle-message"
    onClose={[Function]}
    open={false}
  >
    <div
      id="RRUCSnackBar"
    >
      <WithStyles(ForwardRef(Snackbar))
        action={
          <WithStyles(ForwardRef(IconButton))
            aria-label="close"
            color="inherit"
            onClick={[Function]}
            size="small"
          >
            <Memo
              fontSize="small"
            />
          </WithStyles(ForwardRef(IconButton))>
        }
        anchorOrigin={
          Object {
            "horizontal": "center",
            "vertical": "top",
          }
        }
        autoHideDuration={6000}
        key="topcenter"
        message="en:addnewarticle-message"
        onClose={[Function]}
        open={false}
      >
        <ForwardRef(Snackbar)
          action={
            <WithStyles(ForwardRef(IconButton))
              aria-label="close"
              color="inherit"
              onClick={[Function]}
              size="small"
            >
              <Memo
                fontSize="small"
              />
            </WithStyles(ForwardRef(IconButton))>
          }
          anchorOrigin={
            Object {
              "horizontal": "center",
              "vertical": "top",
            }
          }
          autoHideDuration={6000}
          classes={
            Object {
              "anchorOriginBottomCenter": "MuiSnackbar-anchorOriginBottomCenter",
              "anchorOriginBottomLeft": "MuiSnackbar-anchorOriginBottomLeft",
              "anchorOriginBottomRight": "MuiSnackbar-anchorOriginBottomRight",
              "anchorOriginTopCenter": "MuiSnackbar-anchorOriginTopCenter",
              "anchorOriginTopLeft": "MuiSnackbar-anchorOriginTopLeft",
              "anchorOriginTopRight": "MuiSnackbar-anchorOriginTopRight",
              "root": "MuiSnackbar-root",
            }
          }
          message="en:addnewarticle-message"
          onClose={[Function]}
          open={false}
        />
      </WithStyles(ForwardRef(Snackbar))>
    </div>
  </Component>
</AddNewArticle>
`;
